<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.foolcat.eve.evehelper.mapper.system.MarketGroupsMapper">
  <resultMap id="BaseResultMap" type="xyz.foolcat.eve.evehelper.domain.system.MarketGroups">
    <!--@mbg.generated-->
    <!--@Table market_groups-->
    <id column="market_group_id" jdbcType="INTEGER" property="marketgroupid" />
    <result column="description_id" jdbcType="VARCHAR" property="descriptionid" />
    <result column="has_types" jdbcType="TINYINT" property="hastypes" />
    <result column="icon_id" jdbcType="INTEGER" property="iconid" />
    <result column="name_id" jdbcType="VARCHAR" property="nameid" />
    <result column="parent_group_id" jdbcType="INTEGER" property="parentgroupid" />
  </resultMap>
  <resultMap id="TreeResultMap" type="xyz.foolcat.eve.evehelper.vo.MarketGroupsTreeVO">
    <id column="market_group_id" jdbcType="INTEGER" property="marketGroupId" />
<!--    <result column="description_id" jdbcType="VARCHAR" property="descriptionid" />-->
    <result column="has_types" jdbcType="TINYINT" property="hasTypes" />
    <result column="icon_id" jdbcType="INTEGER" property="iconId" />
    <result column="name_id" jdbcType="VARCHAR" property="nameId" />
    <result column="parent_group_id" jdbcType="INTEGER" property="parentGroupId" />
    <collection property="childrens" ofType="xyz.foolcat.eve.evehelper.vo.MarketGroupsTreeVO" column="market_group_id" select="selectChildren"/>
    <collection property="goods" ofType="xyz.foolcat.eve.evehelper.domain.system.InvTypes" column="market_group_id" select="xyz.foolcat.eve.evehelper.mapper.system.InvTypesMapper.selcetByMarketGroupId"/>
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    market_group_id, description_id, has_types, icon_id, name_id, parent_group_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from market_groups
    where market_group_id = #{marketgroupid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from market_groups
    where market_group_id = #{marketgroupid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="xyz.foolcat.eve.evehelper.domain.system.MarketGroups">
    <!--@mbg.generated-->
    insert into market_groups (market_group_id, description_id, has_types,
      icon_id, name_id, parent_group_id
      )
    values (#{marketgroupid,jdbcType=INTEGER}, #{descriptionid,jdbcType=VARCHAR}, #{hastypes,jdbcType=TINYINT}, 
      #{iconid,jdbcType=INTEGER}, #{nameid,jdbcType=VARCHAR}, #{parentgroupid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="xyz.foolcat.eve.evehelper.domain.system.MarketGroups">
    <!--@mbg.generated-->
    insert into market_groups
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="marketgroupid != null">
        market_group_id,
      </if>
      <if test="descriptionid != null">
        description_id,
      </if>
      <if test="hastypes != null">
        has_types,
      </if>
      <if test="iconid != null">
        icon_id,
      </if>
      <if test="nameid != null">
        name_id,
      </if>
      <if test="parentgroupid != null">
        parent_group_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="marketgroupid != null">
        #{marketgroupid,jdbcType=INTEGER},
      </if>
      <if test="descriptionid != null">
        #{descriptionid,jdbcType=VARCHAR},
      </if>
      <if test="hastypes != null">
        #{hastypes,jdbcType=TINYINT},
      </if>
      <if test="iconid != null">
        #{iconid,jdbcType=INTEGER},
      </if>
      <if test="nameid != null">
        #{nameid,jdbcType=VARCHAR},
      </if>
      <if test="parentgroupid != null">
        #{parentgroupid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="xyz.foolcat.eve.evehelper.domain.system.MarketGroups">
    <!--@mbg.generated-->
    update market_groups
    <set>
      <if test="descriptionid != null">
        description_id = #{descriptionid,jdbcType=VARCHAR},
      </if>
      <if test="hastypes != null">
        has_types = #{hastypes,jdbcType=TINYINT},
      </if>
      <if test="iconid != null">
        icon_id = #{iconid,jdbcType=INTEGER},
      </if>
      <if test="nameid != null">
        name_id = #{nameid,jdbcType=VARCHAR},
      </if>
      <if test="parentgroupid != null">
        parent_group_id = #{parentgroupid,jdbcType=INTEGER},
      </if>
    </set>
    where market_group_id = #{marketgroupid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xyz.foolcat.eve.evehelper.domain.system.MarketGroups">
    <!--@mbg.generated-->
    update market_groups
    set description_id = #{descriptionid,jdbcType=VARCHAR},
      has_types = #{hastypes,jdbcType=TINYINT},
      icon_id = #{iconid,jdbcType=INTEGER},
      name_id = #{nameid,jdbcType=VARCHAR},
      parent_group_id = #{parentgroupid,jdbcType=INTEGER}
    where market_group_id = #{marketgroupid,jdbcType=INTEGER}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update market_groups
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="descriptionID = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when market_group_id = #{item.marketgroupid,jdbcType=INTEGER} then #{item.descriptionid,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="hasTypes = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when market_group_id = #{item.marketgroupid,jdbcType=INTEGER} then #{item.hastypes,jdbcType=TINYINT}
        </foreach>
      </trim>
      <trim prefix="iconID = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when market_group_id = #{item.marketgroupid,jdbcType=INTEGER} then #{item.iconid,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="nameID = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when market_group_id = #{item.marketgroupid,jdbcType=INTEGER} then #{item.nameid,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="parentGroupID = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when market_group_id = #{item.marketgroupid,jdbcType=INTEGER} then #{item.parentgroupid,jdbcType=INTEGER}
        </foreach>
      </trim>
    </trim>
    where market_group_id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.marketgroupid,jdbcType=INTEGER}
    </foreach>
  </update>
  <select id="selectGroupTree" resultMap="TreeResultMap">
    select market_group_id,has_types,icon_id,name_id,parent_group_id
    from market_groups
    where parent_group_id is null
    order by market_group_id
  </select>
  <select id="selectChildren" resultMap="TreeResultMap">
    select market_group_id,has_types,icon_id,name_id,parent_group_id
    from market_groups
    where parent_group_id = #{marketgroupid,jdbcType=INTEGER}
    order by market_group_id
  </select>

</mapper>