<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.foolcat.eve.evehelper.infrastructure.persistence.mapper.system.MarketGroupsMapper">
  <resultMap id="BaseResultMap" type="xyz.foolcat.eve.evehelper.infrastructure.persistence.entity.system.MarketGroupsPO">
    <!--@mbg.generated-->
    <!--@Table market_groups-->
    <result column="market_group_id" jdbcType="INTEGER" property="marketGroupId" />
    <result column="description_id" jdbcType="LONGVARCHAR" property="descriptionId" />
    <result column="has_types" jdbcType="TINYINT" property="hasTypes" />
    <result column="icon_id" jdbcType="INTEGER" property="iconId" />
    <result column="name_id" jdbcType="LONGVARCHAR" property="nameId" />
    <result column="parent_group_id" jdbcType="INTEGER" property="parentGroupId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    market_group_id, description_id, has_types, icon_id, name_id, parent_group_id
  </sql>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into market_groups
    (market_group_id, description_id, has_types, icon_id, name_id, parent_group_id)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.marketGroupId,jdbcType=INTEGER}, #{item.descriptionId,jdbcType=LONGVARCHAR},
        #{item.hasTypes,jdbcType=TINYINT}, #{item.iconId,jdbcType=INTEGER}, #{item.nameId,jdbcType=LONGVARCHAR},
        #{item.parentGroupId,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="xyz.foolcat.eve.evehelper.infrastructure.persistence.entity.system.MarketGroupsPO">
    <!--@mbg.generated-->
    insert into market_groups
    (market_group_id, description_id, has_types, icon_id, name_id, parent_group_id)
    values
    (#{marketGroupId,jdbcType=INTEGER}, #{descriptionId,jdbcType=LONGVARCHAR}, #{hasTypes,jdbcType=TINYINT},
      #{iconId,jdbcType=INTEGER}, #{nameId,jdbcType=LONGVARCHAR}, #{parentGroupId,jdbcType=INTEGER}
      )
    on duplicate key update
    market_group_id = #{marketGroupId,jdbcType=INTEGER},
    description_id = #{descriptionId,jdbcType=LONGVARCHAR},
    has_types = #{hasTypes,jdbcType=TINYINT},
    icon_id = #{iconId,jdbcType=INTEGER},
    name_id = #{nameId,jdbcType=LONGVARCHAR},
    parent_group_id = #{parentGroupId,jdbcType=INTEGER}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="xyz.foolcat.eve.evehelper.infrastructure.persistence.entity.system.MarketGroupsPO">
    <!--@mbg.generated-->
    insert into market_groups
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="marketGroupId != null">
        market_group_id,
      </if>
      <if test="descriptionId != null">
        description_id,
      </if>
      <if test="hasTypes != null">
        has_types,
      </if>
      <if test="iconId != null">
        icon_id,
      </if>
      <if test="nameId != null">
        name_id,
      </if>
      <if test="parentGroupId != null">
        parent_group_id,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="marketGroupId != null">
        #{marketGroupId,jdbcType=INTEGER},
      </if>
      <if test="descriptionId != null">
        #{descriptionId,jdbcType=LONGVARCHAR},
      </if>
      <if test="hasTypes != null">
        #{hasTypes,jdbcType=TINYINT},
      </if>
      <if test="iconId != null">
        #{iconId,jdbcType=INTEGER},
      </if>
      <if test="nameId != null">
        #{nameId,jdbcType=LONGVARCHAR},
      </if>
      <if test="parentGroupId != null">
        #{parentGroupId,jdbcType=INTEGER},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="marketGroupId != null">
        market_group_id = #{marketGroupId,jdbcType=INTEGER},
      </if>
      <if test="descriptionId != null">
        description_id = #{descriptionId,jdbcType=LONGVARCHAR},
      </if>
      <if test="hasTypes != null">
        has_types = #{hasTypes,jdbcType=TINYINT},
      </if>
      <if test="iconId != null">
        icon_id = #{iconId,jdbcType=INTEGER},
      </if>
      <if test="nameId != null">
        name_id = #{nameId,jdbcType=LONGVARCHAR},
      </if>
      <if test="parentGroupId != null">
        parent_group_id = #{parentGroupId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <resultMap id="TreeResultMap" type="xyz.foolcat.eve.evehelper.interfaces.web.vo.MarketGroupsTreeVO">
    <id column="market_group_id" jdbcType="INTEGER" property="marketGroupId" />
<!--    &amp;lt;result column="description_id" jdbcType="VARCHAR" property="descriptionid" /&amp;gt;-->
    <result column="has_types" jdbcType="TINYINT" property="hasTypes" />
    <result column="icon_id" jdbcType="INTEGER" property="iconId" />
    <result column="name_id" jdbcType="VARCHAR" property="nameId" />
    <result column="parent_group_id" jdbcType="INTEGER" property="parentGroupId" />
    <collection column="market_group_id" ofType="xyz.foolcat.eve.evehelper.interfaces.web.vo.MarketGroupsTreeVO" property="childrens" select="selectChildren" />
    <collection column="market_group_id" ofType="xyz.foolcat.eve.evehelper.infrastructure.persistence.entity.system.InvTypes" property="goods" select="xyz.foolcat.eve.evehelper.infrastructure.persistence.mapper.system.InvTypesMapper.selcetByMarketGroupId" />
  </resultMap>
  <select id="selectGroupTree" resultMap="TreeResultMap">
    select market_group_id,has_types,icon_id,name_id,parent_group_id
    from market_groups
    where parent_group_id is null
    order by market_group_id
  </select>
  <select id="selectChildren" resultMap="TreeResultMap">
    select market_group_id,has_types,icon_id,name_id,parent_group_id
    from market_groups
    where parent_group_id = #{marketgroupid,jdbcType=INTEGER}
    order by market_group_id
  </select>

</mapper>