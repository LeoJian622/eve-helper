<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.foolcat.eve.evehelper.mapper.system.IndustryJobMapper">
  <resultMap id="BaseResultMap" type="xyz.foolcat.eve.evehelper.domain.system.IndustryJob">
    <!--@mbg.generated-->
    <!--@Table industry_job-->
    <id column="job_id" jdbcType="BIGINT" property="jobId" />
    <result column="blueprint_id" jdbcType="BIGINT" property="blueprintId" />
    <result column="blueprint_type_id" jdbcType="INTEGER" property="blueprintTypeId" />
    <result column="blueprint_type" jdbcType="VARCHAR" property="blueprintType" />
    <result column="cost" jdbcType="INTEGER" property="cost" />
    <result column="licensed_runs" jdbcType="INTEGER" property="licensedRuns" />
    <result column="probability" jdbcType="DECIMAL" property="probability" />
    <result column="station_id" jdbcType="BIGINT" property="stationId" />
    <result column="output_location_id" jdbcType="BIGINT" property="outputLocationId" />
    <result column="product_type" jdbcType="VARCHAR" property="productType" />
    <result column="blueprint_location_id" jdbcType="BIGINT" property="blueprintLocationId" />
    <result column="duration" jdbcType="BIGINT" property="duration" />
    <result column="installer" jdbcType="VARCHAR" property="installer" />
    <result column="completed_character" jdbcType="VARCHAR" property="completedCharacter" />
    <result column="activity" jdbcType="BIGINT" property="activity" />
    <result column="facility_id" jdbcType="BIGINT" property="facilityId" />
    <result column="runs" jdbcType="INTEGER" property="runs" />
    <result column="start_date" jdbcType="TIMESTAMP" property="startDate" />
    <result column="end_date" jdbcType="TIMESTAMP" property="endDate" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="pause_date" jdbcType="TIMESTAMP" property="pauseDate" />
    <result column="installer_id" jdbcType="BIGINT" property="installerId" />
    <result column="corporation_id" jdbcType="INTEGER" property="corporationId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    job_id, blueprint_id, blueprint_type_id, blueprint_type, cost, licensed_runs, probability, 
    station_id, output_location_id, product_type, blueprint_location_id, duration, installer, 
    completed_character, activity, facility_id, runs, start_date, end_date, `status`, 
    pause_date, installer_id, corporation_id
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update industry_job
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="blueprint_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.blueprintId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="blueprint_type_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.blueprintTypeId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="blueprint_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.blueprintType,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="cost = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.cost,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="licensed_runs = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.licensedRuns,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="probability = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.probability,jdbcType=DECIMAL}
        </foreach>
      </trim>
      <trim prefix="station_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.stationId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="output_location_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.outputLocationId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="product_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.productType,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="blueprint_location_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.blueprintLocationId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="duration = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.duration,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="installer = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.installer,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="completed_character = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.completedCharacter,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="activity = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.activity,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="facility_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.facilityId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="runs = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.runs,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="start_date = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.startDate,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="end_date = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.endDate,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.status,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="pause_date = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.pauseDate,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="installer_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.installerId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="corporation_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.corporationId,jdbcType=INTEGER}
        </foreach>
      </trim>
    </trim>
    where job_id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.jobId,jdbcType=BIGINT}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update industry_job
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="blueprint_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.blueprintId != null">
            when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.blueprintId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="blueprint_type_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.blueprintTypeId != null">
            when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.blueprintTypeId,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="blueprint_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.blueprintType != null">
            when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.blueprintType,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="cost = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.cost != null">
            when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.cost,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="licensed_runs = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.licensedRuns != null">
            when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.licensedRuns,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="probability = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.probability != null">
            when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.probability,jdbcType=DECIMAL}
          </if>
        </foreach>
      </trim>
      <trim prefix="station_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.stationId != null">
            when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.stationId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="output_location_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.outputLocationId != null">
            when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.outputLocationId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="product_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.productType != null">
            when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.productType,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="blueprint_location_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.blueprintLocationId != null">
            when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.blueprintLocationId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="duration = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.duration != null">
            when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.duration,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="installer = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.installer != null">
            when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.installer,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="completed_character = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.completedCharacter != null">
            when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.completedCharacter,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="activity = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.activity != null">
            when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.activity,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="facility_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.facilityId != null">
            when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.facilityId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="runs = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.runs != null">
            when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.runs,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="start_date = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.startDate != null">
            when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.startDate,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="end_date = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.endDate != null">
            when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.endDate,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.status != null">
            when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.status,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="pause_date = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.pauseDate != null">
            when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.pauseDate,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="installer_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.installerId != null">
            when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.installerId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="corporation_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.corporationId != null">
            when job_id = #{item.jobId,jdbcType=BIGINT} then #{item.corporationId,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
    </trim>
    where job_id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.jobId,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into industry_job
    (job_id, blueprint_id, blueprint_type_id, blueprint_type, cost, licensed_runs, probability, 
      station_id, output_location_id, product_type, blueprint_location_id, duration, 
      installer, completed_character, activity, facility_id, runs, start_date, end_date, 
      `status`, pause_date, installer_id, corporation_id)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.jobId,jdbcType=BIGINT}, #{item.blueprintId,jdbcType=BIGINT}, #{item.blueprintTypeId,jdbcType=INTEGER}, 
        #{item.blueprintType,jdbcType=VARCHAR}, #{item.cost,jdbcType=INTEGER}, #{item.licensedRuns,jdbcType=INTEGER}, 
        #{item.probability,jdbcType=DECIMAL}, #{item.stationId,jdbcType=BIGINT}, #{item.outputLocationId,jdbcType=BIGINT}, 
        #{item.productType,jdbcType=VARCHAR}, #{item.blueprintLocationId,jdbcType=BIGINT}, 
        #{item.duration,jdbcType=BIGINT}, #{item.installer,jdbcType=VARCHAR}, #{item.completedCharacter,jdbcType=VARCHAR}, 
        #{item.activity,jdbcType=BIGINT}, #{item.facilityId,jdbcType=BIGINT}, #{item.runs,jdbcType=INTEGER}, 
        #{item.startDate,jdbcType=TIMESTAMP}, #{item.endDate,jdbcType=TIMESTAMP}, #{item.status,jdbcType=VARCHAR}, 
        #{item.pauseDate,jdbcType=TIMESTAMP}, #{item.installerId,jdbcType=BIGINT}, #{item.corporationId,jdbcType=INTEGER}
        )
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="xyz.foolcat.eve.evehelper.domain.system.IndustryJob">
    <!--@mbg.generated-->
    insert into industry_job
    (job_id, blueprint_id, blueprint_type_id, blueprint_type, cost, licensed_runs, probability, 
      station_id, output_location_id, product_type, blueprint_location_id, duration, 
      installer, completed_character, activity, facility_id, runs, start_date, end_date, 
      `status`, pause_date, installer_id, corporation_id)
    values
    (#{jobId,jdbcType=BIGINT}, #{blueprintId,jdbcType=BIGINT}, #{blueprintTypeId,jdbcType=INTEGER}, 
      #{blueprintType,jdbcType=VARCHAR}, #{cost,jdbcType=INTEGER}, #{licensedRuns,jdbcType=INTEGER}, 
      #{probability,jdbcType=DECIMAL}, #{stationId,jdbcType=BIGINT}, #{outputLocationId,jdbcType=BIGINT}, 
      #{productType,jdbcType=VARCHAR}, #{blueprintLocationId,jdbcType=BIGINT}, #{duration,jdbcType=BIGINT}, 
      #{installer,jdbcType=VARCHAR}, #{completedCharacter,jdbcType=VARCHAR}, #{activity,jdbcType=BIGINT}, 
      #{facilityId,jdbcType=BIGINT}, #{runs,jdbcType=INTEGER}, #{startDate,jdbcType=TIMESTAMP}, 
      #{endDate,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, #{pauseDate,jdbcType=TIMESTAMP}, 
      #{installerId,jdbcType=BIGINT}, #{corporationId,jdbcType=INTEGER})
    on duplicate key update 
    job_id = #{jobId,jdbcType=BIGINT}, 
    blueprint_id = #{blueprintId,jdbcType=BIGINT}, 
    blueprint_type_id = #{blueprintTypeId,jdbcType=INTEGER}, 
    blueprint_type = #{blueprintType,jdbcType=VARCHAR}, 
    cost = #{cost,jdbcType=INTEGER}, 
    licensed_runs = #{licensedRuns,jdbcType=INTEGER}, 
    probability = #{probability,jdbcType=DECIMAL}, 
    station_id = #{stationId,jdbcType=BIGINT}, 
    output_location_id = #{outputLocationId,jdbcType=BIGINT}, 
    product_type = #{productType,jdbcType=VARCHAR}, 
    blueprint_location_id = #{blueprintLocationId,jdbcType=BIGINT}, 
    duration = #{duration,jdbcType=BIGINT}, 
    installer = #{installer,jdbcType=VARCHAR}, 
    completed_character = #{completedCharacter,jdbcType=VARCHAR}, 
    activity = #{activity,jdbcType=BIGINT}, 
    facility_id = #{facilityId,jdbcType=BIGINT}, 
    runs = #{runs,jdbcType=INTEGER}, 
    start_date = #{startDate,jdbcType=TIMESTAMP}, 
    end_date = #{endDate,jdbcType=TIMESTAMP}, 
    `status` = #{status,jdbcType=VARCHAR}, 
    pause_date = #{pauseDate,jdbcType=TIMESTAMP}, 
    installer_id = #{installerId,jdbcType=BIGINT}, 
    corporation_id = #{corporationId,jdbcType=INTEGER}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="xyz.foolcat.eve.evehelper.domain.system.IndustryJob">
    <!--@mbg.generated-->
    insert into industry_job
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jobId != null">
        job_id,
      </if>
      <if test="blueprintId != null">
        blueprint_id,
      </if>
      <if test="blueprintTypeId != null">
        blueprint_type_id,
      </if>
      <if test="blueprintType != null">
        blueprint_type,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="licensedRuns != null">
        licensed_runs,
      </if>
      <if test="probability != null">
        probability,
      </if>
      <if test="stationId != null">
        station_id,
      </if>
      <if test="outputLocationId != null">
        output_location_id,
      </if>
      <if test="productType != null">
        product_type,
      </if>
      <if test="blueprintLocationId != null">
        blueprint_location_id,
      </if>
      <if test="duration != null">
        duration,
      </if>
      <if test="installer != null">
        installer,
      </if>
      <if test="completedCharacter != null">
        completed_character,
      </if>
      <if test="activity != null">
        activity,
      </if>
      <if test="facilityId != null">
        facility_id,
      </if>
      <if test="runs != null">
        runs,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="pauseDate != null">
        pause_date,
      </if>
      <if test="installerId != null">
        installer_id,
      </if>
      <if test="corporationId != null">
        corporation_id,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jobId != null">
        #{jobId,jdbcType=BIGINT},
      </if>
      <if test="blueprintId != null">
        #{blueprintId,jdbcType=BIGINT},
      </if>
      <if test="blueprintTypeId != null">
        #{blueprintTypeId,jdbcType=INTEGER},
      </if>
      <if test="blueprintType != null">
        #{blueprintType,jdbcType=VARCHAR},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=INTEGER},
      </if>
      <if test="licensedRuns != null">
        #{licensedRuns,jdbcType=INTEGER},
      </if>
      <if test="probability != null">
        #{probability,jdbcType=DECIMAL},
      </if>
      <if test="stationId != null">
        #{stationId,jdbcType=BIGINT},
      </if>
      <if test="outputLocationId != null">
        #{outputLocationId,jdbcType=BIGINT},
      </if>
      <if test="productType != null">
        #{productType,jdbcType=VARCHAR},
      </if>
      <if test="blueprintLocationId != null">
        #{blueprintLocationId,jdbcType=BIGINT},
      </if>
      <if test="duration != null">
        #{duration,jdbcType=BIGINT},
      </if>
      <if test="installer != null">
        #{installer,jdbcType=VARCHAR},
      </if>
      <if test="completedCharacter != null">
        #{completedCharacter,jdbcType=VARCHAR},
      </if>
      <if test="activity != null">
        #{activity,jdbcType=BIGINT},
      </if>
      <if test="facilityId != null">
        #{facilityId,jdbcType=BIGINT},
      </if>
      <if test="runs != null">
        #{runs,jdbcType=INTEGER},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="pauseDate != null">
        #{pauseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="installerId != null">
        #{installerId,jdbcType=BIGINT},
      </if>
      <if test="corporationId != null">
        #{corporationId,jdbcType=INTEGER},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="jobId != null">
        job_id = #{jobId,jdbcType=BIGINT},
      </if>
      <if test="blueprintId != null">
        blueprint_id = #{blueprintId,jdbcType=BIGINT},
      </if>
      <if test="blueprintTypeId != null">
        blueprint_type_id = #{blueprintTypeId,jdbcType=INTEGER},
      </if>
      <if test="blueprintType != null">
        blueprint_type = #{blueprintType,jdbcType=VARCHAR},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=INTEGER},
      </if>
      <if test="licensedRuns != null">
        licensed_runs = #{licensedRuns,jdbcType=INTEGER},
      </if>
      <if test="probability != null">
        probability = #{probability,jdbcType=DECIMAL},
      </if>
      <if test="stationId != null">
        station_id = #{stationId,jdbcType=BIGINT},
      </if>
      <if test="outputLocationId != null">
        output_location_id = #{outputLocationId,jdbcType=BIGINT},
      </if>
      <if test="productType != null">
        product_type = #{productType,jdbcType=VARCHAR},
      </if>
      <if test="blueprintLocationId != null">
        blueprint_location_id = #{blueprintLocationId,jdbcType=BIGINT},
      </if>
      <if test="duration != null">
        duration = #{duration,jdbcType=BIGINT},
      </if>
      <if test="installer != null">
        installer = #{installer,jdbcType=VARCHAR},
      </if>
      <if test="completedCharacter != null">
        completed_character = #{completedCharacter,jdbcType=VARCHAR},
      </if>
      <if test="activity != null">
        activity = #{activity,jdbcType=BIGINT},
      </if>
      <if test="facilityId != null">
        facility_id = #{facilityId,jdbcType=BIGINT},
      </if>
      <if test="runs != null">
        runs = #{runs,jdbcType=INTEGER},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="pauseDate != null">
        pause_date = #{pauseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="installerId != null">
        installer_id = #{installerId,jdbcType=BIGINT},
      </if>
      <if test="corporationId != null">
        corporation_id = #{corporationId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <insert id="batchInsertOrUpdate" parameterType="map">
    insert into industry_job
    (job_id, blueprint_id, blueprint_type_id, blueprint_type, cost, licensed_runs, probability,
    station_id, output_location_id, product_type, blueprint_location_id, duration,
    installer, completed_character, activity, facility_id, runs, start_date, end_date,
    `status`, pause_date, installer_id,corporation_id)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.jobId,jdbcType=BIGINT}, #{item.blueprintId,jdbcType=BIGINT}, #{item.blueprintTypeId,jdbcType=INTEGER},
      #{item.blueprintType,jdbcType=VARCHAR}, #{item.cost,jdbcType=INTEGER}, #{item.licensedRuns,jdbcType=INTEGER},
      #{item.probability,jdbcType=DECIMAL}, #{item.stationId,jdbcType=BIGINT}, #{item.outputLocationId,jdbcType=BIGINT},
      #{item.productType,jdbcType=VARCHAR}, #{item.blueprintLocationId,jdbcType=BIGINT},
      #{item.duration,jdbcType=BIGINT}, #{item.installer,jdbcType=VARCHAR}, #{item.completedCharacter,jdbcType=VARCHAR},
      #{item.activity,jdbcType=BIGINT}, #{item.facilityId,jdbcType=BIGINT}, #{item.runs,jdbcType=INTEGER},
      #{item.startDate,jdbcType=TIMESTAMP}, #{item.endDate,jdbcType=TIMESTAMP}, #{item.status,jdbcType=VARCHAR},
      #{item.pauseDate,jdbcType=TIMESTAMP}, #{item.installerId,jdbcType=BIGINT},#{item.corporationId,jdbcType=INTEGER})
    </foreach>
    on duplicate key update
    job_id = values(job_id),
    blueprint_id = values(blueprint_id),
    blueprint_type_id = values(blueprint_type_id),
    blueprint_type = values(blueprint_type),
    cost = values(cost),
    licensed_runs = values(licensed_runs),
    probability = values(probability),
    station_id = values(station_id),
    output_location_id = values(output_location_id),
    product_type = values(product_type),
    blueprint_location_id = values(blueprint_location_id),
    duration = values(duration),
    installer = values(installer),
    completed_character = values(completed_character),
    activity = values(activity),
    facility_id = values(facility_id),
    runs = values(runs),
    start_date = values(start_date),
    end_date = values(end_date),
    `status` = values(status),
    pause_date = values(pause_date),
    installer_id = values(installer_id),
    corporation_id = values(corporation_id)
  </insert>
</mapper>