<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.foolcat.eve.evehelper.infrastructure.persistence.mapper.eve.IndustryBlueprintsMapper">
  <resultMap id="BaseResultMap" type="xyz.foolcat.eve.evehelper.infrastructure.persistence.entity.eve.IndustryBlueprintsPO">
    <!--@mbg.generated-->
    <!--@Table industryBlueprints-->
    <id column="blueprintTypeID" jdbcType="INTEGER" property="blueprinttypeid" />
    <result column="maxProductionLimit" jdbcType="INTEGER" property="maxproductionlimit" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    blueprintTypeID, maxProductionLimit
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from industryBlueprints
    where blueprintTypeID = #{blueprinttypeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from industryBlueprints
    where blueprintTypeID = #{blueprinttypeid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="xyz.foolcat.eve.evehelper.infrastructure.persistence.entity.eve.IndustryBlueprintsPO">
    <!--@mbg.generated-->
    insert into industryBlueprints (blueprintTypeID, maxProductionLimit
      )
    values (#{blueprinttypeid,jdbcType=INTEGER}, #{maxproductionlimit,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="xyz.foolcat.eve.evehelper.infrastructure.persistence.entity.eve.IndustryBlueprintsPO">
    <!--@mbg.generated-->
    insert into industryBlueprints
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="blueprinttypeid != null">
        blueprintTypeID,
      </if>
      <if test="maxproductionlimit != null">
        maxProductionLimit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="blueprinttypeid != null">
        #{blueprinttypeid,jdbcType=INTEGER},
      </if>
      <if test="maxproductionlimit != null">
        #{maxproductionlimit,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="xyz.foolcat.eve.evehelper.infrastructure.persistence.entity.eve.IndustryBlueprintsPO">
    <!--@mbg.generated-->
    update industryBlueprints
    <set>
      <if test="maxproductionlimit != null">
        maxProductionLimit = #{maxproductionlimit,jdbcType=INTEGER},
      </if>
    </set>
    where blueprintTypeID = #{blueprinttypeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xyz.foolcat.eve.evehelper.infrastructure.persistence.entity.eve.IndustryBlueprintsPO">
    <!--@mbg.generated-->
    update industryBlueprints
    set maxProductionLimit = #{maxproductionlimit,jdbcType=INTEGER}
    where blueprintTypeID = #{blueprinttypeid,jdbcType=INTEGER}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update industryBlueprints
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="maxProductionLimit = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when blueprintTypeID = #{item.blueprinttypeid,jdbcType=INTEGER} then #{item.maxproductionlimit,jdbcType=INTEGER}
        </foreach>
      </trim>
    </trim>
    where blueprintTypeID in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.blueprinttypeid,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="insertOrUpdate" parameterType="xyz.foolcat.eve.evehelper.infrastructure.persistence.entity.eve.IndustryBlueprintsPO">
    <!--@mbg.generated-->
    insert into industryBlueprints (blueprintTypeID, maxProductionLimit
      )
    values (#{blueprinttypeid,jdbcType=INTEGER}, #{maxproductionlimit,jdbcType=INTEGER}
      )
    on duplicate key update
    maxProductionLimit = #{maxproductionlimit,jdbcType=INTEGER}
  </insert>
</mapper>